|Multiplier
validOutput <= ctrl:inst2.valid
clock => ctrl:inst2.clk
clock => ca5:inst.Clock
rst => ctrl:inst2.rst
rst => ca5:inst.Rst
inFreq => ca5:inst.InFreq
nInput[0] => ca5:inst.n[0]
nInput[1] => ca5:inst.n[1]
nInput[2] => ca5:inst.n[2]
adjustin => ctrl:inst2.adjust
FinalOutput <= ca5:inst.Output
siopout <= ca5:inst.SiP
cntenout <= ctrl:inst2.counten
cntinitout <= ctrl:inst2.countinit
cntout[0] <= ca5:inst.counterout[0]
cntout[1] <= ca5:inst.counterout[1]
cntout[2] <= ca5:inst.counterout[2]
cntout[3] <= ca5:inst.counterout[3]
cntout[4] <= ca5:inst.counterout[4]
cntout[5] <= ca5:inst.counterout[5]
cntout[6] <= ca5:inst.counterout[6]
cntout[7] <= ca5:inst.counterout[7]
cntout[8] <= ca5:inst.counterout[8]
cntout[9] <= ca5:inst.counterout[9]
cntout[10] <= ca5:inst.counterout[10]
cntout[11] <= ca5:inst.counterout[11]
cntout[12] <= ca5:inst.counterout[12]
cntout[13] <= ca5:inst.counterout[13]
cntout[14] <= ca5:inst.counterout[14]
cntout[15] <= ca5:inst.counterout[15]
dcout[0] <= ca5:inst.downcounterout[0]
dcout[1] <= ca5:inst.downcounterout[1]
dcout[2] <= ca5:inst.downcounterout[2]
dcout[3] <= ca5:inst.downcounterout[3]
dcout[4] <= ca5:inst.downcounterout[4]
dcout[5] <= ca5:inst.downcounterout[5]
dcout[6] <= ca5:inst.downcounterout[6]
dcout[7] <= ca5:inst.downcounterout[7]
dcout[8] <= ca5:inst.downcounterout[8]
dcout[9] <= ca5:inst.downcounterout[9]
dcout[10] <= ca5:inst.downcounterout[10]
dcout[11] <= ca5:inst.downcounterout[11]
dcout[12] <= ca5:inst.downcounterout[12]
dcout[13] <= ca5:inst.downcounterout[13]
dcout[14] <= ca5:inst.downcounterout[14]
dcout[15] <= ca5:inst.downcounterout[15]


|Multiplier|ctrl:inst2
clk => ps~1.DATAIN
rst => ps~3.DATAIN
sip => Selector3.IN3
sip => Selector0.IN3
sip => Selector3.IN1
sip => Selector2.IN2
adjust => Selector1.IN2
adjust => Selector0.IN1
adjust => Selector2.IN1
valid <= valid.DB_MAX_OUTPUT_PORT_TYPE
counten <= counten.DB_MAX_OUTPUT_PORT_TYPE
countinit <= countinit.DB_MAX_OUTPUT_PORT_TYPE


|Multiplier|ca5:inst
Output <= lpm_counter1:FrequencyDivider.cout
Clock => lpm_counter1:FrequencyDivider.clock
Clock => lpm_counter2:mCounter.clock
Clock => FlipFlop.CLK
Rst => lpm_counter1:FrequencyDivider.aclr
Rst => lpm_counter2:mCounter.aclr
Rst => inverter.IN0
init => lpm_counter2:mCounter.sset
CountEn => lpm_counter2:mCounter.cnt_en
n[0] => lpm_clshift0:Shifter.distance[0]
n[1] => lpm_clshift0:Shifter.distance[1]
n[2] => lpm_clshift0:Shifter.distance[2]
SiP <= andgate.DB_MAX_OUTPUT_PORT_TYPE
InFreq => andgate.IN0
InFreq => FlipFlop.DATAIN
counterout[0] <= lpm_counter2:mCounter.q[0]
counterout[1] <= lpm_counter2:mCounter.q[1]
counterout[2] <= lpm_counter2:mCounter.q[2]
counterout[3] <= lpm_counter2:mCounter.q[3]
counterout[4] <= lpm_counter2:mCounter.q[4]
counterout[5] <= lpm_counter2:mCounter.q[5]
counterout[6] <= lpm_counter2:mCounter.q[6]
counterout[7] <= lpm_counter2:mCounter.q[7]
counterout[8] <= lpm_counter2:mCounter.q[8]
counterout[9] <= lpm_counter2:mCounter.q[9]
counterout[10] <= lpm_counter2:mCounter.q[10]
counterout[11] <= lpm_counter2:mCounter.q[11]
counterout[12] <= lpm_counter2:mCounter.q[12]
counterout[13] <= lpm_counter2:mCounter.q[13]
counterout[14] <= lpm_counter2:mCounter.q[14]
counterout[15] <= lpm_counter2:mCounter.q[15]
downcounterout[0] <= lpm_counter1:FrequencyDivider.q[0]
downcounterout[1] <= lpm_counter1:FrequencyDivider.q[1]
downcounterout[2] <= lpm_counter1:FrequencyDivider.q[2]
downcounterout[3] <= lpm_counter1:FrequencyDivider.q[3]
downcounterout[4] <= lpm_counter1:FrequencyDivider.q[4]
downcounterout[5] <= lpm_counter1:FrequencyDivider.q[5]
downcounterout[6] <= lpm_counter1:FrequencyDivider.q[6]
downcounterout[7] <= lpm_counter1:FrequencyDivider.q[7]
downcounterout[8] <= lpm_counter1:FrequencyDivider.q[8]
downcounterout[9] <= lpm_counter1:FrequencyDivider.q[9]
downcounterout[10] <= lpm_counter1:FrequencyDivider.q[10]
downcounterout[11] <= lpm_counter1:FrequencyDivider.q[11]
downcounterout[12] <= lpm_counter1:FrequencyDivider.q[12]
downcounterout[13] <= lpm_counter1:FrequencyDivider.q[13]
downcounterout[14] <= lpm_counter1:FrequencyDivider.q[14]
downcounterout[15] <= lpm_counter1:FrequencyDivider.q[15]


|Multiplier|ca5:inst|lpm_counter1:FrequencyDivider
aclr => aclr.IN1
clock => clock.IN1
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
sload => sload.IN1
cout <= lpm_counter:LPM_COUNTER_component.cout
q[0] <= lpm_counter:LPM_COUNTER_component.q
q[1] <= lpm_counter:LPM_COUNTER_component.q
q[2] <= lpm_counter:LPM_COUNTER_component.q
q[3] <= lpm_counter:LPM_COUNTER_component.q
q[4] <= lpm_counter:LPM_COUNTER_component.q
q[5] <= lpm_counter:LPM_COUNTER_component.q
q[6] <= lpm_counter:LPM_COUNTER_component.q
q[7] <= lpm_counter:LPM_COUNTER_component.q
q[8] <= lpm_counter:LPM_COUNTER_component.q
q[9] <= lpm_counter:LPM_COUNTER_component.q
q[10] <= lpm_counter:LPM_COUNTER_component.q
q[11] <= lpm_counter:LPM_COUNTER_component.q
q[12] <= lpm_counter:LPM_COUNTER_component.q
q[13] <= lpm_counter:LPM_COUNTER_component.q
q[14] <= lpm_counter:LPM_COUNTER_component.q
q[15] <= lpm_counter:LPM_COUNTER_component.q


|Multiplier|ca5:inst|lpm_counter1:FrequencyDivider|lpm_counter:LPM_COUNTER_component
clock => cntr_8pj:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => cntr_8pj:auto_generated.aclr
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => cntr_8pj:auto_generated.sload
data[0] => cntr_8pj:auto_generated.data[0]
data[1] => cntr_8pj:auto_generated.data[1]
data[2] => cntr_8pj:auto_generated.data[2]
data[3] => cntr_8pj:auto_generated.data[3]
data[4] => cntr_8pj:auto_generated.data[4]
data[5] => cntr_8pj:auto_generated.data[5]
data[6] => cntr_8pj:auto_generated.data[6]
data[7] => cntr_8pj:auto_generated.data[7]
data[8] => cntr_8pj:auto_generated.data[8]
data[9] => cntr_8pj:auto_generated.data[9]
data[10] => cntr_8pj:auto_generated.data[10]
data[11] => cntr_8pj:auto_generated.data[11]
data[12] => cntr_8pj:auto_generated.data[12]
data[13] => cntr_8pj:auto_generated.data[13]
data[14] => cntr_8pj:auto_generated.data[14]
data[15] => cntr_8pj:auto_generated.data[15]
cin => ~NO_FANOUT~
q[0] <= cntr_8pj:auto_generated.q[0]
q[1] <= cntr_8pj:auto_generated.q[1]
q[2] <= cntr_8pj:auto_generated.q[2]
q[3] <= cntr_8pj:auto_generated.q[3]
q[4] <= cntr_8pj:auto_generated.q[4]
q[5] <= cntr_8pj:auto_generated.q[5]
q[6] <= cntr_8pj:auto_generated.q[6]
q[7] <= cntr_8pj:auto_generated.q[7]
q[8] <= cntr_8pj:auto_generated.q[8]
q[9] <= cntr_8pj:auto_generated.q[9]
q[10] <= cntr_8pj:auto_generated.q[10]
q[11] <= cntr_8pj:auto_generated.q[11]
q[12] <= cntr_8pj:auto_generated.q[12]
q[13] <= cntr_8pj:auto_generated.q[13]
q[14] <= cntr_8pj:auto_generated.q[14]
q[15] <= cntr_8pj:auto_generated.q[15]
cout <= cntr_8pj:auto_generated.cout
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|Multiplier|ca5:inst|lpm_counter1:FrequencyDivider|lpm_counter:LPM_COUNTER_component|cntr_8pj:auto_generated
aclr => counter_reg_bit1a[15].ACLR
aclr => counter_reg_bit1a[14].ACLR
aclr => counter_reg_bit1a[13].ACLR
aclr => counter_reg_bit1a[12].ACLR
aclr => counter_reg_bit1a[11].ACLR
aclr => counter_reg_bit1a[10].ACLR
aclr => counter_reg_bit1a[9].ACLR
aclr => counter_reg_bit1a[8].ACLR
aclr => counter_reg_bit1a[7].ACLR
aclr => counter_reg_bit1a[6].ACLR
aclr => counter_reg_bit1a[5].ACLR
aclr => counter_reg_bit1a[4].ACLR
aclr => counter_reg_bit1a[3].ACLR
aclr => counter_reg_bit1a[2].ACLR
aclr => counter_reg_bit1a[1].ACLR
aclr => counter_reg_bit1a[0].ACLR
clock => counter_reg_bit1a[15].CLK
clock => counter_reg_bit1a[14].CLK
clock => counter_reg_bit1a[13].CLK
clock => counter_reg_bit1a[12].CLK
clock => counter_reg_bit1a[11].CLK
clock => counter_reg_bit1a[10].CLK
clock => counter_reg_bit1a[9].CLK
clock => counter_reg_bit1a[8].CLK
clock => counter_reg_bit1a[7].CLK
clock => counter_reg_bit1a[6].CLK
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cout <= cout_actual.DB_MAX_OUTPUT_PORT_TYPE
data[0] => _.IN1
data[1] => _.IN1
data[2] => _.IN1
data[3] => _.IN1
data[4] => _.IN1
data[5] => _.IN1
data[6] => _.IN1
data[7] => _.IN1
data[8] => _.IN1
data[9] => _.IN1
data[10] => _.IN1
data[11] => _.IN1
data[12] => _.IN1
data[13] => _.IN1
data[14] => _.IN1
data[15] => _.IN1
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT
q[6] <= counter_reg_bit1a[6].REGOUT
q[7] <= counter_reg_bit1a[7].REGOUT
q[8] <= counter_reg_bit1a[8].REGOUT
q[9] <= counter_reg_bit1a[9].REGOUT
q[10] <= counter_reg_bit1a[10].REGOUT
q[11] <= counter_reg_bit1a[11].REGOUT
q[12] <= counter_reg_bit1a[12].REGOUT
q[13] <= counter_reg_bit1a[13].REGOUT
q[14] <= counter_reg_bit1a[14].REGOUT
q[15] <= counter_reg_bit1a[15].REGOUT
sload => _.IN1
sload => counter_reg_bit1a[15].IN1


|Multiplier|ca5:inst|lpm_clshift0:Shifter
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
distance[0] => distance[0].IN1
distance[1] => distance[1].IN1
distance[2] => distance[2].IN1
result[0] <= lpm_clshift:LPM_CLSHIFT_component.result
result[1] <= lpm_clshift:LPM_CLSHIFT_component.result
result[2] <= lpm_clshift:LPM_CLSHIFT_component.result
result[3] <= lpm_clshift:LPM_CLSHIFT_component.result
result[4] <= lpm_clshift:LPM_CLSHIFT_component.result
result[5] <= lpm_clshift:LPM_CLSHIFT_component.result
result[6] <= lpm_clshift:LPM_CLSHIFT_component.result
result[7] <= lpm_clshift:LPM_CLSHIFT_component.result
result[8] <= lpm_clshift:LPM_CLSHIFT_component.result
result[9] <= lpm_clshift:LPM_CLSHIFT_component.result
result[10] <= lpm_clshift:LPM_CLSHIFT_component.result
result[11] <= lpm_clshift:LPM_CLSHIFT_component.result
result[12] <= lpm_clshift:LPM_CLSHIFT_component.result
result[13] <= lpm_clshift:LPM_CLSHIFT_component.result
result[14] <= lpm_clshift:LPM_CLSHIFT_component.result
result[15] <= lpm_clshift:LPM_CLSHIFT_component.result


|Multiplier|ca5:inst|lpm_clshift0:Shifter|lpm_clshift:LPM_CLSHIFT_component
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
clock => ~NO_FANOUT~
data[0] => lpm_clshift_vjc:auto_generated.data[0]
data[1] => lpm_clshift_vjc:auto_generated.data[1]
data[2] => lpm_clshift_vjc:auto_generated.data[2]
data[3] => lpm_clshift_vjc:auto_generated.data[3]
data[4] => lpm_clshift_vjc:auto_generated.data[4]
data[5] => lpm_clshift_vjc:auto_generated.data[5]
data[6] => lpm_clshift_vjc:auto_generated.data[6]
data[7] => lpm_clshift_vjc:auto_generated.data[7]
data[8] => lpm_clshift_vjc:auto_generated.data[8]
data[9] => lpm_clshift_vjc:auto_generated.data[9]
data[10] => lpm_clshift_vjc:auto_generated.data[10]
data[11] => lpm_clshift_vjc:auto_generated.data[11]
data[12] => lpm_clshift_vjc:auto_generated.data[12]
data[13] => lpm_clshift_vjc:auto_generated.data[13]
data[14] => lpm_clshift_vjc:auto_generated.data[14]
data[15] => lpm_clshift_vjc:auto_generated.data[15]
direction => lpm_clshift_vjc:auto_generated.direction
distance[0] => lpm_clshift_vjc:auto_generated.distance[0]
distance[1] => lpm_clshift_vjc:auto_generated.distance[1]
distance[2] => lpm_clshift_vjc:auto_generated.distance[2]
overflow <= <GND>
result[0] <= lpm_clshift_vjc:auto_generated.result[0]
result[1] <= lpm_clshift_vjc:auto_generated.result[1]
result[2] <= lpm_clshift_vjc:auto_generated.result[2]
result[3] <= lpm_clshift_vjc:auto_generated.result[3]
result[4] <= lpm_clshift_vjc:auto_generated.result[4]
result[5] <= lpm_clshift_vjc:auto_generated.result[5]
result[6] <= lpm_clshift_vjc:auto_generated.result[6]
result[7] <= lpm_clshift_vjc:auto_generated.result[7]
result[8] <= lpm_clshift_vjc:auto_generated.result[8]
result[9] <= lpm_clshift_vjc:auto_generated.result[9]
result[10] <= lpm_clshift_vjc:auto_generated.result[10]
result[11] <= lpm_clshift_vjc:auto_generated.result[11]
result[12] <= lpm_clshift_vjc:auto_generated.result[12]
result[13] <= lpm_clshift_vjc:auto_generated.result[13]
result[14] <= lpm_clshift_vjc:auto_generated.result[14]
result[15] <= lpm_clshift_vjc:auto_generated.result[15]
underflow <= <GND>


|Multiplier|ca5:inst|lpm_clshift0:Shifter|lpm_clshift:LPM_CLSHIFT_component|lpm_clshift_vjc:auto_generated
data[0] => _.IN1
data[0] => sbit_w[16].IN1
data[1] => _.IN1
data[1] => _.IN1
data[1] => sbit_w[17].IN1
data[2] => _.IN1
data[2] => _.IN1
data[2] => sbit_w[18].IN1
data[3] => _.IN1
data[3] => _.IN1
data[3] => sbit_w[19].IN1
data[4] => _.IN1
data[4] => _.IN1
data[4] => sbit_w[20].IN1
data[5] => _.IN1
data[5] => _.IN1
data[5] => sbit_w[21].IN1
data[6] => _.IN1
data[6] => _.IN1
data[6] => sbit_w[22].IN1
data[7] => _.IN1
data[7] => _.IN1
data[7] => sbit_w[23].IN1
data[8] => _.IN1
data[8] => _.IN1
data[8] => sbit_w[24].IN1
data[9] => _.IN1
data[9] => _.IN1
data[9] => sbit_w[25].IN1
data[10] => _.IN1
data[10] => _.IN1
data[10] => sbit_w[26].IN1
data[11] => _.IN1
data[11] => _.IN1
data[11] => sbit_w[27].IN1
data[12] => _.IN1
data[12] => _.IN1
data[12] => sbit_w[28].IN1
data[13] => _.IN1
data[13] => _.IN1
data[13] => sbit_w[29].IN1
data[14] => _.IN1
data[14] => _.IN1
data[14] => sbit_w[30].IN1
data[15] => _.IN1
data[15] => sbit_w[31].IN1
direction => _.IN0
direction => _.IN1
direction => _.IN0
direction => _.IN1
direction => _.IN0
direction => _.IN1
distance[0] => _.IN0
distance[0] => _.IN0
distance[0] => _.IN0
distance[1] => _.IN0
distance[1] => _.IN0
distance[1] => _.IN0
distance[2] => _.IN0
distance[2] => _.IN0
distance[2] => _.IN0
result[0] <= sbit_w[48].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= sbit_w[49].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= sbit_w[50].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= sbit_w[51].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= sbit_w[52].DB_MAX_OUTPUT_PORT_TYPE
result[5] <= sbit_w[53].DB_MAX_OUTPUT_PORT_TYPE
result[6] <= sbit_w[54].DB_MAX_OUTPUT_PORT_TYPE
result[7] <= sbit_w[55].DB_MAX_OUTPUT_PORT_TYPE
result[8] <= sbit_w[56].DB_MAX_OUTPUT_PORT_TYPE
result[9] <= sbit_w[57].DB_MAX_OUTPUT_PORT_TYPE
result[10] <= sbit_w[58].DB_MAX_OUTPUT_PORT_TYPE
result[11] <= sbit_w[59].DB_MAX_OUTPUT_PORT_TYPE
result[12] <= sbit_w[60].DB_MAX_OUTPUT_PORT_TYPE
result[13] <= sbit_w[61].DB_MAX_OUTPUT_PORT_TYPE
result[14] <= sbit_w[62].DB_MAX_OUTPUT_PORT_TYPE
result[15] <= sbit_w[63].DB_MAX_OUTPUT_PORT_TYPE


|Multiplier|ca5:inst|lpm_counter2:mCounter
aclr => aclr.IN1
clock => clock.IN1
cnt_en => cnt_en.IN1
sset => sset.IN1
q[0] <= lpm_counter:LPM_COUNTER_component.q
q[1] <= lpm_counter:LPM_COUNTER_component.q
q[2] <= lpm_counter:LPM_COUNTER_component.q
q[3] <= lpm_counter:LPM_COUNTER_component.q
q[4] <= lpm_counter:LPM_COUNTER_component.q
q[5] <= lpm_counter:LPM_COUNTER_component.q
q[6] <= lpm_counter:LPM_COUNTER_component.q
q[7] <= lpm_counter:LPM_COUNTER_component.q
q[8] <= lpm_counter:LPM_COUNTER_component.q
q[9] <= lpm_counter:LPM_COUNTER_component.q
q[10] <= lpm_counter:LPM_COUNTER_component.q
q[11] <= lpm_counter:LPM_COUNTER_component.q
q[12] <= lpm_counter:LPM_COUNTER_component.q
q[13] <= lpm_counter:LPM_COUNTER_component.q
q[14] <= lpm_counter:LPM_COUNTER_component.q
q[15] <= lpm_counter:LPM_COUNTER_component.q


|Multiplier|ca5:inst|lpm_counter2:mCounter|lpm_counter:LPM_COUNTER_component
clock => cntr_8ek:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_8ek:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => cntr_8ek:auto_generated.aclr
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => cntr_8ek:auto_generated.sset
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
data[8] => ~NO_FANOUT~
data[9] => ~NO_FANOUT~
data[10] => ~NO_FANOUT~
data[11] => ~NO_FANOUT~
data[12] => ~NO_FANOUT~
data[13] => ~NO_FANOUT~
data[14] => ~NO_FANOUT~
data[15] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_8ek:auto_generated.q[0]
q[1] <= cntr_8ek:auto_generated.q[1]
q[2] <= cntr_8ek:auto_generated.q[2]
q[3] <= cntr_8ek:auto_generated.q[3]
q[4] <= cntr_8ek:auto_generated.q[4]
q[5] <= cntr_8ek:auto_generated.q[5]
q[6] <= cntr_8ek:auto_generated.q[6]
q[7] <= cntr_8ek:auto_generated.q[7]
q[8] <= cntr_8ek:auto_generated.q[8]
q[9] <= cntr_8ek:auto_generated.q[9]
q[10] <= cntr_8ek:auto_generated.q[10]
q[11] <= cntr_8ek:auto_generated.q[11]
q[12] <= cntr_8ek:auto_generated.q[12]
q[13] <= cntr_8ek:auto_generated.q[13]
q[14] <= cntr_8ek:auto_generated.q[14]
q[15] <= cntr_8ek:auto_generated.q[15]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|Multiplier|ca5:inst|lpm_counter2:mCounter|lpm_counter:LPM_COUNTER_component|cntr_8ek:auto_generated
aclr => counter_reg_bit1a[15].ACLR
aclr => counter_reg_bit1a[14].ACLR
aclr => counter_reg_bit1a[13].ACLR
aclr => counter_reg_bit1a[12].ACLR
aclr => counter_reg_bit1a[11].ACLR
aclr => counter_reg_bit1a[10].ACLR
aclr => counter_reg_bit1a[9].ACLR
aclr => counter_reg_bit1a[8].ACLR
aclr => counter_reg_bit1a[7].ACLR
aclr => counter_reg_bit1a[6].ACLR
aclr => counter_reg_bit1a[5].ACLR
aclr => counter_reg_bit1a[4].ACLR
aclr => counter_reg_bit1a[3].ACLR
aclr => counter_reg_bit1a[2].ACLR
aclr => counter_reg_bit1a[1].ACLR
aclr => counter_reg_bit1a[0].ACLR
clock => counter_reg_bit1a[15].CLK
clock => counter_reg_bit1a[14].CLK
clock => counter_reg_bit1a[13].CLK
clock => counter_reg_bit1a[12].CLK
clock => counter_reg_bit1a[11].CLK
clock => counter_reg_bit1a[10].CLK
clock => counter_reg_bit1a[9].CLK
clock => counter_reg_bit1a[8].CLK
clock => counter_reg_bit1a[7].CLK
clock => counter_reg_bit1a[6].CLK
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cnt_en => _.IN1
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT
q[6] <= counter_reg_bit1a[6].REGOUT
q[7] <= counter_reg_bit1a[7].REGOUT
q[8] <= counter_reg_bit1a[8].REGOUT
q[9] <= counter_reg_bit1a[9].REGOUT
q[10] <= counter_reg_bit1a[10].REGOUT
q[11] <= counter_reg_bit1a[11].REGOUT
q[12] <= counter_reg_bit1a[12].REGOUT
q[13] <= counter_reg_bit1a[13].REGOUT
q[14] <= counter_reg_bit1a[14].REGOUT
q[15] <= counter_reg_bit1a[15].REGOUT
sset => _.IN1
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN1


